import telebot
from telebot import types

from db.dbutils import get_all_data_types
from db.dbutils import get_from_perfume
from entity.Perfume import *
from entity.User import User

bot = telebot.TeleBot('7078690317:AAENSHTCpgFHUApd667xHRZtaq5aRcxxNrs')
user_dict = {}
product_question = """
–ö–∞–∫–æ–π —Ç–∏–ø –ø—Ä–æ–¥—É–∫—Ç–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å?\n
* –ü–∞—Ä—Ñ—é–º–µ—Ä–Ω–∞—è –≤–æ–¥–∞ (EAU DE PARFUM) * ‚Äì –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –í –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω–æ–π –≤–æ–¥–µ –¥—É—à–∏—Å—Ç—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç 15-20%, –ø–æ—ç—Ç–æ–º—É –µ–µ –Ω–∞–∑—ã–≤–∞—é—Ç –¥–Ω–µ–≤–Ω—ã–º–∏ –¥—É—Ö–∞–º. –§–æ—Ä–º–∞—Ç –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω–æ–π –≤–æ–¥—ã –ø–æ–∑–≤–æ–ª—è–µ—Ç —è—Ä–∫–æ –∏ –∞–∫—Ç–∏–≤–Ω–æ –ø—Ä–æ—è–≤–ª—è—Ç—å—Å—è —Å—Ä–µ–¥–Ω–∏–º –∏ –±–∞–∑–æ–≤—ã–º –Ω–æ—Ç–∞–º –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 5-8 —á–∞—Å–æ–≤, —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–≤–æ–ª—å–Ω–æ–π –≤—ã—Å–æ–∫–æ–π —Å—Ç–æ–π–∫–æ—Å—Ç—å—é\n
* –¢—É–∞–ª–µ—Ç–Ω–∞—è –≤–æ–¥–∞ * –æ–±—ã—á–Ω–æ –∏–º–µ–µ—Ç –±–æ–ª–µ–µ –Ω–∏–∑–∫—É—é –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Å–µ–ª (–æ–±—ã—á–Ω–æ –æ–∫–æ–ª–æ 5-15%), —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–µ –±–æ–ª–µ–µ –ª–µ–≥–∫–æ–π –∏ –º–µ–Ω–µ–µ —Å—Ç–æ–π–∫–æ–π. –°—Ç–æ–π–∫–æ—Å—Ç—å —Ç—É–∞–ª–µ—Ç–Ω–æ–π –≤–æ–¥—ã –æ–±—ã—á–Ω–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç 2 –¥–æ 4 —á–∞—Å–æ–≤ –Ω–∞ –∫–æ–∂–µ.\n
* –î—É—Ö–∏ * –∏–º–µ—é—Ç –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –æ—Ç 15 –¥–æ 30% –∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Å–≤–æ—é —Å—Ç–æ–π–∫–æ—Å—Ç—å –æ—Ç 8 –¥–æ 12 —á–∞—Å–æ–≤, –ø–æ—ç—Ç–æ–º—É –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –≤–µ—á–µ—Ä–Ω–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.\n
* –≠–∫—Å—Ç—Ä–∞–∫—Ç –¥—É—Ö–æ–≤ –∏–ª–∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥—É—Ö–∏ * - —Å–∞–º—ã–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ —Å—Ç–æ–π–∫–∏–π –≤–∏–¥ –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –æ—Ç 30 –¥–æ 55%. –°—Ç–æ–π–∫–æ—Å—Ç—å —Ç–∞–∫–∏—Ö –¥—É—Ö–æ–≤ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ 24 —á–∞—Å–æ–≤.
"""
with open('aromat_question.txt', 'r') as file:
    all_lines = file.readlines()
    aromat_question = ''.join(all_lines)

with open('aromat_question2.txt', 'r') as file:
    all_lines = file.readlines()
    aromat_question2 = ''.join(all_lines)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_photo(message.chat.id,
                   'https://github.com/IldarGreat/voluunterFront/blob/main/web/start.jpg?raw=true', """
    –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –ø–æ–¥–±–æ—Ä–∫–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ñ—é–º–∞.
–í—Å—ë, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å ‚Äì –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –±–æ—Ç. 
–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ–º–æ–≥—É—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∂–µ–ª–∞–µ–º—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥–±–æ—Ä–∫—É –ø–∞—Ä—Ñ—é–º–∞ –∏—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π ü§ç
    """)
    bot.register_next_step_handler(message, begin)


@bot.message_handler(commands=['begin'])
def begin(message):
    user = User()
    user_dict[message.chat.id] = user
    markup = types.ReplyKeyboardMarkup()
    price_ranges = get_all_data_types('price')
    for price_range in price_ranges:
        btn = types.KeyboardButton(Perfume.convert_price_range_to_string(price_range))
        markup.row(btn)
    bot.send_message(message.chat.id, "–í —Ä–∞–º–∫–∞—Ö –∫–∞–∫–æ–≥–æ –±—é–¥–∂–µ—Ç–∞ –≤—ã –∏—â–µ—Ç–µ –ø–∞—Ä—Ñ—é–º?", reply_markup=markup)
    bot.register_next_step_handler(message, sex_click)


def sex_click(message, second_call=False):
    if second_call or any(
            message.text in s for s in Perfume.convert_prices_range_to_string(get_all_data_types('price'))):
        user = user_dict[message.chat.id]
        user.budget = message.text
        markup = types.ReplyKeyboardMarkup()
        sexs = ['–î–ª—è –º—É–∂—á–∏–Ω—ã', '–î–ª—è –∂–µ–Ω—â–∏–Ω—ã']
        for sex in sexs:
            btn = types.KeyboardButton(sex)
            markup.row(btn)
        bot.send_message(message.chat.id, "–î–ª—è –∫–æ–≥–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –∞—Ä–æ–º–∞—Ç?", reply_markup=markup)
        bot.register_next_step_handler(message, price_click)
    elif message.text == '/start':
        del user_dict[message.chat.id]
        send_welcome(message)
    else:
        bot.send_message(message.chat.id, f"–¢–∞–∫–æ–π —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–∫ {message.text} —É –Ω–∞—Å –Ω–µ—Ç")
        price_click(message, True)


def price_click(message, second_call=False):
    if second_call or any(message.text in s for s in ['–î–ª—è –º—É–∂—á–∏–Ω—ã', '–î–ª—è –∂–µ–Ω—â–∏–Ω—ã']):
        user = user_dict[message.chat.id]
        user.sex = message.text
        markup = types.ReplyKeyboardMarkup()
        perfumes_types = get_all_data_types('type')
        for perfume_type in perfumes_types:
            btn = types.KeyboardButton(perfume_type)
            markup.row(btn)
        bot.send_message(message.chat.id, product_question, reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(message, type_click)
    elif message.text == '/start':
        del user_dict[message.chat.id]
        send_welcome(message)
    else:
        bot.send_message(message.chat.id, f"–¢–∞–∫–æ–≥–æ –ø–æ–ª–∞ {message.text} –Ω–µ—Ç")
        begin(message)


def type_click(message, second_call=False):
    if second_call or any(message.text in s for s in get_all_data_types('type')):
        user = user_dict[message.chat.id]
        user.product = message.text
        markup = types.ReplyKeyboardMarkup()
        notes_types = get_all_data_types('notes')
        for note_type in notes_types:
            btn = types.KeyboardButton(note_type)
            markup.row(btn)
        bot.send_message(message.chat.id, aromat_question, parse_mode='HTML')
        bot.send_message(message.chat.id, aromat_question2, reply_markup=markup, parse_mode='HTML')
        bot.register_next_step_handler(message, search)
    elif message.text == '/start':
        del user_dict[message.chat.id]
        send_welcome(message)
    else:
        bot.send_message(message.chat.id, f"–¢–∞–∫–æ–≥–æ –ø–æ–ª–∞ {message.text} –Ω–µ—Ç")
        price_click(message, True)


def search(message):
    if any(message.text in s for s in get_all_data_types('notes')):
        user = user_dict[message.chat.id]
        user.note = message.text
        price_low, price_high = Perfume.convert_prices_range_from_string(user.budget)
        if user.sex == '–î–ª—è –º—É–∂—á–∏–Ω—ã':
            sex = 'm'
        else:
            sex = 'f'
        perfumes = get_from_perfume(user.note, price_low, price_high, user.product, sex)
        markup = types.ReplyKeyboardMarkup()
        btn = types.KeyboardButton('–ù–∞–π—Ç–∏ –µ—â–µ —Ä–∞–∑')
        markup.row(btn)
        bot.send_message(message.chat.id, "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", reply_markup=markup)
        if len(perfumes) == 0:
            bot.send_photo(message.chat.id,
                           'https://github.com/IldarGreat/voluunterFront/blob/main/web/not_found.jpg?raw=true',
                           f'–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:\n–¢–∏–ø –ø—Ä–æ–¥—É–∫—Ü–∏–∏: {user.product}\n–ë—é–¥–∂–µ—Ç: {user.budget}\n–ê—Ä–æ–º–∞—Ç: {user.note}\n{user.sex}\n–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        for perfume in perfumes:
            bot.send_photo(message.chat.id, perfume.image,
                           f"<b>{perfume.name}</b>\n\n<b>–¢–∏–ø</b>: {perfume.convert_types_to_readable_format()}\n\n<b>–û–±—ä—ë–º</b>: {perfume.volume_str} –º–ª\n\n<b>–°—Ç–æ–∏–º–æ—Å—Ç—å</b>: –æ—Ç {perfume.price_str} —Ä\n\n{perfume.comment}",
                           parse_mode='HTML')
        del user_dict[message.chat.id]
        bot.register_next_step_handler(message, begin)
    elif message.text == '/start':
        del user_dict[message.chat.id]
        send_welcome(message)
    else:
        bot.send_message(message.chat.id, f'–¢–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞—Ä–æ–º–∞—Ç–∞, –∫–∞–∫ {message.text} —É –Ω–∞—Å –Ω–µ—Ç')
        type_click(message, True)


bot.infinity_polling()
