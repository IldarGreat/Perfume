import telebot
from telebot import types

from db.dbutils import get_all_data_types
from db.dbutils import get_from_perfume
from entity.Perfume import *
from entity.User import User

bot = telebot.TeleBot('7078690317:AAENSHTCpgFHUApd667xHRZtaq5aRcxxNrs')
user_dict = {}


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, """
    –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –ø–æ–¥–±–æ—Ä–∫–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ñ—é–º–∞.
–í—Å—ë, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å ‚Äì –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –±–æ—Ç. 
–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ–º–æ–≥—É—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∂–µ–ª–∞–µ–º—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥–±–æ—Ä–∫—É –ø–∞—Ä—Ñ—é–º–∞ –∏—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π ü§ç
    """)
    bot.register_next_step_handler(message, begin)


@bot.message_handler(commands=['begin'])
def begin(message):
    user = User()
    user_dict[message.chat.id] = user
    markup = types.ReplyKeyboardMarkup()
    price_ranges = get_all_data_types('price')
    for price_range in price_ranges:
        btn = types.KeyboardButton(Perfume.convert_price_range_to_string(price_range))
        markup.row(btn)
    bot.send_message(message.chat.id, "–í —Ä–∞–º–∫–∞—Ö –∫–∞–∫–æ–≥–æ –±—é–¥–∂–µ—Ç–∞ –≤—ã –∏—â–µ—Ç–µ –ø–∞—Ä—Ñ—é–º?", reply_markup=markup)
    bot.register_next_step_handler(message, price_click)


def price_click(message, second_call=False):
    if second_call or any(
            message.text in s for s in Perfume.convert_prices_range_to_string(get_all_data_types('price'))):
        user = user_dict[message.chat.id]
        user.budget = message.text
        markup = types.ReplyKeyboardMarkup()
        perfumes_types = get_all_data_types('type')
        for perfume_type in perfumes_types:
            btn = types.KeyboardButton(perfume_type)
            markup.row(btn)
        bot.send_message(message.chat.id, "–ö–∞–∫–æ–π —Ç–∏–ø –ø—Ä–æ–¥—É–∫—Ç–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å? ", reply_markup=markup)
        bot.register_next_step_handler(message, type_click)
    else:
        bot.send_message(message.chat.id, f"–¢–∞–∫–æ–π —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–∫ {message.text} —É –Ω–∞—Å –Ω–µ—Ç")
        begin(message)


def type_click(message, second_call=False):
    if second_call or any(message.text in s for s in get_all_data_types('type')):
        user = user_dict[message.chat.id]
        user.product = message.text
        markup = types.ReplyKeyboardMarkup()
        notes_types = get_all_data_types('notes')
        for note_type in notes_types:
            btn = types.KeyboardButton(note_type)
            markup.row(btn)
        bot.send_message(message.chat.id, "–ö–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∞—Ä–æ–º–∞—Ç–æ–≤ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è?", reply_markup=markup)
        bot.register_next_step_handler(message, search)
    else:
        bot.send_message(message.chat.id, f"–¢–∞–∫–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–∞–∫ {message.text} —É –Ω–∞—Å –Ω–µ—Ç")
        price_click(message, True)


def search(message):
    if any(message.text in s for s in get_all_data_types('notes')):
        user = user_dict[message.chat.id]
        user.note = message.text
        price_low, price_high = Perfume.convert_prices_range_from_string(user.budget)
        perfumes = get_from_perfume(user.note, price_low, price_high, user.product)
        markup = types.ReplyKeyboardMarkup()
        btn = types.KeyboardButton('–ù–∞–π—Ç–∏ –µ—â–µ —Ä–∞–∑')
        markup.row(btn)
        bot.send_message(message.chat.id, "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", reply_markup=markup)
        if len(perfumes) == 0:
            bot.send_photo(message.chat.id,
                           'https://github.com/IldarGreat/voluunterFront/blob/main/web/Untitled_Artwork-2_page-0001.jpg?raw=true',
                           f'–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:\n–¢–∏–ø –ø—Ä–æ–¥—É–∫—Ü–∏–∏:{user.product}\n–ë—é–¥–∂–µ—Ç:{user.budget}\n–ê—Ä–æ–º–∞—Ç:{user.note}\n–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        for perfume in perfumes:
            bot.send_photo(message.chat.id, perfume.image,
                           f"*{perfume.name}*\n\n–¢–∏–ø: {perfume.convert_types_to_readable_format()}\n\n–û–±—ä—ë–º: {perfume.volume_str} –º–ª\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: –æ—Ç {perfume.price_str} —Ä\n\n{perfume.comment}",
                           parse_mode='Markdown')
        del user_dict[message.chat.id]
        bot.register_next_step_handler(message, begin)
    else:
        bot.send_message(message.chat.id, f'–¢–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞—Ä–æ–º–∞—Ç–∞, –∫–∞–∫ {message.text} —É –Ω–∞—Å –Ω–µ—Ç')
        type_click(message, True)


bot.infinity_polling()
